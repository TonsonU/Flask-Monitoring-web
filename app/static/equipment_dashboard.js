document.addEventListener("DOMContentLoaded", function () {
    let equipmentFilter = document.getElementById("equipmentFilter");

    // üìå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß
    fetch("/dashboard/api/get_equipment_types_grouped")
        .then(response => response.json())
        .then(data => {
            let firstOption = null;  // ‚úÖ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡∏™‡∏∏‡∏î

            Object.keys(data).forEach((deviceName, index) => {
                let option = new Option(deviceName, deviceName);
                equipmentFilter.appendChild(option);
                
                if (index === 0) {
                    firstOption = deviceName; // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡∏™‡∏∏‡∏î
                }
            });

            // üìå ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ default ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á Dropdown
            if (firstOption) {
                equipmentFilter.value = firstOption;
                loadWorkCountByEquipmentChart(firstOption); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
                loadWorkTrendByEquipment(firstOption); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°
            }
        });

    // üìå ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå ‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î Bar Chart ‡∏ï‡∏≤‡∏° Line
    equipmentFilter.addEventListener("change", function () {
        let selectedEquipment = this.value;
        loadWorkCountByEquipmentChart(selectedEquipment);
    });

    // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î Bar Chart
    async function loadWorkCountByEquipmentChart(equipmentName) {
        try {
            let response = await fetch("/dashboard/api/get_equipment_types_grouped");
            let data = await response.json();
            let equipmentData = data[equipmentName] || [];

            console.log("üìä Work Count by Equipment (Grouped by Line):", equipmentData);

            let ctx = document.getElementById("work-count-by-equipment-chart").getContext("2d");

            // ‚ùå ‡∏ó‡∏≥‡∏•‡∏≤‡∏¢ Chart ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
            if (window.workEquipmentChart) {
                window.workEquipmentChart.destroy();
            }

            let labels = equipmentData.map(item => item.line);
            let values = equipmentData.map(item => item.count);
            let colors = generateColorPalette(labels.length);

            window.workEquipmentChart = new Chart(ctx, {
                type: "bar",
                data: {
                    labels: labels,
                    datasets: [{
                        label: `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏Ç‡∏≠‡∏á ${equipmentName}`,
                        data: values,
                        backgroundColor: colors,
                        barThickness: 'flex'  // ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏ó‡πà‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ö‡∏ö Dynamic ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    layout: {
                        padding: { top: 20 }
                    },
                    indexAxis: 'y',
                    plugins: {
                        legend: { display: false },
                        tooltip: { enabled: true },
                        datalabels: {
                            anchor: 'end',
                            align: 'right',
                            formatter: (value) => value,
                            color: '#000',
                            font: { weight: 'bold', size: 14 }
                        }
                    },
                    scales: {
                        x: { 
                            beginAtZero: true, 
                            suggestedMax: Math.max(...values) * 1.2,
                            ticks: { stepSize: 1, precision: 0 } 
                        },
                        y: {
                            beginAtZero: true,
                            ticks: { stepSize: 1, precision: 0 }
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });

        } catch (error) {
            console.error("‚ùå Error fetching Work Count by Equipment data:", error);
        }
    }

    // üìå ‡πÇ‡∏´‡∏•‡∏î Line Chart ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ï‡∏≤‡∏°‡∏õ‡∏µ
    async function loadWorkTrendByEquipment(equipment_name) {
        try {
            let response = await fetch(`/dashboard/api/work_trend_by_equipment?equipment_name=${encodeURIComponent(equipment_name)}`);
            let data = await response.json();
            console.log("üìä Work Trend Data:", data);  // ‚úÖ Debug JSON Response

            let ctx = document.getElementById("work-trend-line-chart").getContext("2d");

            // ‚ùå ‡∏ó‡∏≥‡∏•‡∏≤‡∏¢ Chart ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
            if (window.workTrendChart) {
                window.workTrendChart.destroy();
            }

            window.workTrendChart = new Chart(ctx, {
                type: "line",
                data: {
                    labels: data.labels,  // üìå ‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á
                    datasets: [{
                        label: `‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå (${equipment_name})`,
                        data: data.values,  // üìå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏µ
                        borderColor: "#007bff",
                        backgroundColor: "rgba(0, 123, 255, 0.2)",
                        fill: true,
                        tension: 0.3,  // ‚úÖ ‡πÉ‡∏´‡πâ‡πÄ‡∏™‡πâ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
                        pointRadius: 5, // ‚úÖ ‡∏à‡∏∏‡∏î‡∏Å‡∏•‡∏°‡∏ö‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü
                        pointBackgroundColor: "#007bff"
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    layout: {
                        padding: { top: 20 }
                    },
                    plugins: {
                        legend: { position: "top" },
                        tooltip: { enabled: true },
                        datalabels: {
                            anchor: "end",
                            align: "top",
                            formatter: (value) => value,
                            color: "#000",
                            font: { weight: "bold", size: 14 }
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: true
                        },
                        y: {
                            beginAtZero: true,
                            suggestedMax: Math.max(...data.values) * 1.2, // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏≠‡∏µ‡∏Å 20%
                            ticks: { stepSize: 1, precision: 0 }
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });

        } catch (error) {
            console.error("‚ùå Error fetching Work Trend data:", error);
        }
    }

    // üìå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏à‡∏≤‡∏Å Dropdown
    document.getElementById("equipmentFilter").addEventListener("change", function () {
        let equipment_name = this.value;
        if (equipment_name) {
            loadWorkTrendByEquipment(equipment_name);
        }
    });


    

});


